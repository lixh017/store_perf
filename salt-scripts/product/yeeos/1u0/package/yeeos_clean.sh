#!/bin/bash
# Modified        Date            Comments
# Li Gang         2017-09-13      Fix: backup atop data before removing
# Li Gang         2017-09-05      Fix: fix bug in func "umount_ap"
# Li Gang         2017-05-07      Fix: add input parameter for func "umount_ap" to support all product types
# Li Gang         2017-05-07      Fix: add func "clean_ap_entry"
# Li Gang         2017-02-24      Fix: remove "WooStor.ko"
# Li Gang         2017-01-17      Fix: clean all ldap config and bdb data files
# Li Gang         2017-01-03      Add: clean auto backup log file 
# Li Gang         2016-12-06      Fix: stop service before umount ap
# Li Gang         2016-10-20      Add: add func "check_killall"
# Li Gang         2016-09-28      Add: clean up "ldap.log"
# Li Gang         2016-07-25      Add: remove coredump files generated by abrt, remove "atop" files  
# Li Gang         2016-06-30      Fix: remove systemd service entry(YfsNode.service,YfsProxy.service) 
# Li Gang         2016-05-12      Add: remove YeeSAN kernel module entry from "modules.dep"
# Li Gang         2016-05-09      Add: clean yeesan installation log files, restart ldap related services
# Li Gang         2016-04-29      Add: clean ldap data, re-order clean flow
# Li Gang         2016-04-12      Add: For YeeSAN 2.1: umount mount dir
# Li Gang         2016-04-01      Add: clean all YeeSAN procs after all other clean steps finishes  
# Li Gang         2016-03-21      Add: execute "killall -9 YfsProxy"; remove "YeeSAN.ko"
# Li Gang         2016-02-16      Add: For YeeSAN 2.1: remove "YfsProxy" rpm package if it exists
# Li Gang         2015-12-01      Fix: remove old version of "YeeStor.ko"
# Li Gang         2015-11-18      Fix: execute "umount" command at first to fix hang issue.  
# Li Gang         2015-11-17      Move "nfs stop" command to execute at first; add os version check(add ubuntu system's check)
# Li Gang         2015-11-14      comment "umount" operation, add "nfs stop" command
# Li Gang         2015-11-13      For NAS test: stop ctdb service, remove 'ctdb' package
# li gang         2015-08-25      Enhance check before removing "/yfs/log"



function check_killall()
{
   local ret=1
   local ret_2=1

   rpm -qa |grep psmisc >> /dev/null 2>&1
   ret=$?
   if [[ $ret -gt 0 ]]; then
      yum install psmisc -y
      wait
      rpm -qa |grep psmisc >> /dev/null 2>&1
      ret_2=$?
   fi

   if [[ $ret -eq 0 ]] || [[ ${ret_2} -eq 0 ]]; then
      return 0
   else
     return 1
   fi

}



function clean_proc()
{
   service YfsProxy stop
   killall -9 YfsProxy
   
   service YfsNode stop
   killall -9 YfsNode
   
   service YfsMonitor stop
   killall -9 YfsMonitor
   
   killall -9 YfsCLIServer
   killall -9 YfsNameNode
   killall -9 YfsAttrNode
   killall -9 YfsOSS
   pkill -9 Yfs
   killall -9 gdb
}


function clean_yfs_service_entry()
{
   yfsnode_service="/usr/lib/systemd/system/YfsNode.service"
   yfsproxy_service="/usr/lib/systemd/system/YfsProxy.service"
   
   yfsnode_service_2="/etc/systemd/system/basic.target.wants/YfsNode.service"
   yfsproxy_service_2="/etc/systemd/system/basic.target.wants/YfsProxy.service"
   
   if [[ -f "${yfsnode_service}" ]]; then
      rm -f ${yfsnode_service}
   fi
   
   if [[ -f "${yfsproxy_service}" ]]; then
      rm -f ${yfsproxy_service}
   fi
   
   if [[ -L "${yfsnode_service_2}" ]]; then
      rm -f ${yfsnode_service_2}
   fi
   
   if [[ -L "${yfsproxy_service_2}" ]]; then
      rm -f ${yfsproxy_service_2}
   fi
    
}


function clean_ldap_data()
{
    # stop ldap server
    killall -9 slapd
    killall -9 nscd
    killall -9 nslcd 
    
    rm -rf /usr/local/var/openldap-data
    rm -rf /usr/local/etc/openldap

    ldap_log="/var/log/ldap.log"
    if [[ -f ${ldap_log} ]]; then
      true >${ldap_log}
    fi
	
    # restart service
    if [[ -x "/usr/local/libexec/slapd" ]]; then
       /usr/local/libexec/slapd -f /usr/local/etc/openldap/slapd.conf -F /usr/local/etc/openldap/slapd.d
    fi
	
    if [[ -x "/usr/sbin/nslcd" ]]; then
       service nslcd start
    fi
	
    if [[ -x "/usr/sbin/nscd" ]]; then
        service nscd start
    fi
 
}


function clean_ctdb()
{
	# check if OS is Ubuntu
	linux_uname_full=`uname -a`
	linux_ubuntu="Ubuntu"
	if  [[ "${linux_uname_full}" =~ "${linux_ubuntu}" ]]; then
	    dpkg-query -S ctdb
	    ret=$?
	    if [[ $ret -eq 0 ]]; then
               apt-get remove ctdb -y
               true >/var/log/log.ctdb
               rm -f /var/log/log.ctdb
               dpkg-query -S ctdb
               ret_1=$?
               if [[ ${ret_1} -gt 0 ]]; then
                  echo "ctdb package has been removed successfully."
               fi
            else
               echo "ctdb package is not installed!"
            fi
        else
           ctdb_pack=`rpm -qa |grep ctdb`
           # debug
           if [[ -n "${ctdb_pack}" ]]; then
              echo "ctdb package installed: $ctdb_pack"
              # ${ctdb_pack%.*} -> ctdb-xxx.xxx-xx
              echo ${ctdb_pack%.*}| xargs rpm -e
           fi
           true >/var/log/log.ctdb
           rm -f /var/log/log.ctdb
           ctdb_pack_2=`rpm -qa |grep ctdb`
           if [[ -z "${ctdb_pack_2}" ]] && [[ -n "${ctdb_pack}" ]]; then
              echo "ctdb package has been removed successfully."
           fi
       fi
}


function umount_ap()
{
   local ap_type_base=$1
   
   local ap_kernel_base_dir=`ls /proc/fs/${ap_type_base}/`
   for single_ap_kernel_base_dir in ${ap_kernel_base_dir}
   do
      echo 1 > /proc/fs/${ap_type_base}/${single_ap_kernel_base_dir}/meta_retry_max
      mount |grep ${ap_type_base} > /dev/null
      if [[ $? -eq 0  ]]; then
         # fix: 2016-12-06: filter "bash|sh|csh|ksh"
         # fix: 2017-09-05:  kill all procs which access ap mount dirs
         all_mount_dirs=`mount |grep ${ap_type_base}|awk '{print $3}'`
	 for single_mount_dir in ${all_mount_dirs}
	 do
	     echo "Killing all processes which still access ap mount dir [${single_mount_dir}], please wait ..."
             lsof ${single_mount_dir} | awk '{ print $2 }'| grep -v "PID"| grep -v -E "bash|sh|csh|ksh"|xargs -i kill -9 {}
         
             echo "Umount ap mount dir [${single_mount_dir}], please wait ..."
             umount ${single_mount_dir}
	 done	 
      fi
   done
}  


function clean_ap_entry()
{
   rmmod YeeStor
   rmmod YeeSAN
   rmmod WooStor
   rmmod YeeFS
   rmmod YeeOS

   # remove old version "YeeStor.ko"
   # remove old version "YeeSAN.ko"
   # remove old version "WooStor.ko"
   # remove old version "YeeFS.ko"
   # remove old version "YeeOS.ko"
   rm -f /lib/modules/`uname -r`/extra/YeeStor.ko
   rm -f /lib/modules/`uname -r`/extra/YeeSAN.ko
   rm -f /lib/modules/`uname -r`/extra/WooStor.ko
   rm -f /lib/modules/`uname -r`/extra/YeeOS.ko
   rm -f /lib/modules/`uname -r`/extra/YeeFS.ko

   # remove entry from "modules.dep"
   sed -i '/^extra\/YeeStor/d' /lib/modules/`uname -r`/modules.dep
   sed -i '/^extra\/YeeSAN/d' /lib/modules/`uname -r`/modules.dep
   sed -i '/^extra\/WooStor/d' /lib/modules/`uname -r`/modules.dep
   sed -i '/^extra\/YeeOS/d' /lib/modules/`uname -r`/modules.dep
   sed -i '/^extra\/YeeFS/d' /lib/modules/`uname -r`/modules.dep
}


check_killall

clean_proc
# Modify: 2017-05-07
umount_ap "YeeStor"
umount_ap "YeeSAN"
umount_ap "WooStor"
umount_ap "YeeOS"
umount_ap "YeeFS"

# kill all ctdb related process
ps -ef |grep -v grep |grep ctdbd |awk '{ print $2 }' |xargs kill -9
/etc/init.d/nfs stop

umount /yfs/log

rm -rf /usr/local/yfs/
rm -rf /etc/yfs
rm -rf /usr/sbin/yfs

clean_ctdb

# find all process which access "/yfs/log", then kill them all
# lsof /yfs/log|awk '{ print $2 }'| grep -v "PID"| xargs -i kill -9 {}
# umount /yfs/log

rm -rf /yfs/
rm -rf /var/log/yfs/*
rm -rf /tmp/yfs
rm -rf /usr/sbin/yfs*
rm -rf /usr/bin/yfs*
rm -rf /var/log/messages-*
> /var/log/messages

umount_ap "YeeStor"
umount_ap "YeeSAN"
umount_ap "WooStor"
umount_ap "YeeOS"
umount_ap "YeeFS"

clean_ap_entry

if  [[ "${linux_uname_full}" =~ "${linux_ubuntu}" ]]; then
   apt-get remove YeeStorKernelModule -y
   apt-get remove yfsmgr_scripts -y
   apt-get remove YfsNode -y
   apt-get remove YfsProxy -y
   /etc/init.d/scst stop
   apt-get remove iscsi -y
   apt-get remove sct -y
   apt-get remove scstadmin -y
else   
   rpm -e YeeStorKernelModule
   rpm -e yfsmgr_scripts
   rpm -e YfsNode
   rpm -e YfsProxy
   /etc/init.d/scst stop
   rpm -e iscsi-scst scst scstadmin
fi

iscsiadm -m node --logout
rm -rf /var/lib/iscsi/nodes/*
rm -rf /var/lib/iscsi/send_targets/*

for i in `ifconfig -a |grep HWaddr|awk {'print $1'}|grep :[0-9]$`
do
	ifconfig $i down >> /dev/null 2>&1  
done

# remove cookie files
rm -f /tmp/cli/*

# remove installation log files
rm -f /tmp/woostor30_post_install*.log

# clean proc again
clean_proc

# clean ldap data
clean_ldap_data

# clean service entry
clean_yfs_service_entry

# clean abrt coredump files, atop files
echo "Begin to clean files from [/var/tmp/abrt], please wait..."
rm -rf /var/tmp/abrt/*
echo "Finished cleaning files from [/var/tmp/abrt]."

#add: 2017-09-13: backup atop data files to local dir because performance analysis may need "atop" data files.
echo "Backing up atop data files from [/var/log/atop], please wait..."
mkdir -p /root/atop_data_bak/
cp /var/log/atop/* /root/atop_data_bak/
echo "Copied atop data files from [/var/log/atop] to local dir [/root/atop_data_bak] finished."

echo "Begin to clean files from [/var/log/atop], please wait..."
rm -rf /var/log/atop/*
echo "Finished cleaning files from [/var/log/atop]."

# clean auto backup log files
auto_log_bak="/tmp/bak_yfs_log.log"
if [ -f "${auto_log_bak}" ]
then
    true >${auto_log_bak}
fi
